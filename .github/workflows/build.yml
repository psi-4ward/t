name: Build

on:
  push:

jobs:

  update_tag:
    name: Update dev tag
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'master' }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Update tag
        run: |
          export OWNER=$(echo $GITHUB_REPOSITORY | cut -d/ -f1)
          git config --global user.name 'Github Action'
          git config --global user.email $OWNER@users.noreply.github.com
          git tag -f v0.0.0
          git push -f origin v0.0.0

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js and NPM
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Update version in package.json
        run: |
          cd app 
          npm version 0.0.0

      - name: Build AskSinAnalyzerXS UI
        run: |
          cd ui 
          npm ci 
          npm run build

      - name: Build AskSinAnalyzerXS
        run: |
          cd app 
          npm ci 
          npm run tsc

      - name: Create dist bundle
        if: runner.os == 'Linux'
        run: |
          cd app 
          node scripts/make-node-pkg.js

      - name: Build Electron App
        uses: samuelmeuli/action-electron-builder@v1
        with:
          package_root: app
          github_token: ${{ secrets.github_token }}

      - name: Update build artifacts in v0.0.0 Release
        if: ${{ github.ref_name == 'master' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v0.0.0
          fail_on_unmatched_files: false
          files: |
            builds/asksin-analyzer-xs-*-node.tar.gz
            builds/asksin-analyzer-xs-*-win.exe
            builds/asksin-analyzer-xs-*-mac.tar.gz
            builds/asksin-analyzer-xs-*-linux.tar.gz
